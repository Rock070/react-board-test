{"version":3,"sources":["components/MessageBoard/MessageBoard.js","components/MessageBoard/index.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","MessageBoard","useState","message","setMessage","MessageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessage","fetch","then","res","json","data","catch","err","console","log","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onFocus","onChange","target","rows","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","document","getElementById"],"mappings":"w+DAUA,IAEMA,EAAOC,IAAOC,IAAV,KAKJC,EAAQF,IAAOG,GAAV,KAILC,EAAcJ,IAAOK,KAAV,KAIXC,EAAkBN,IAAOO,SAAV,KAKfC,EAAeR,IAAOS,OAAV,KAKZC,EAAcV,IAAOC,IAAV,KAIXU,EAAmBX,IAAOC,IAAV,KAUhBW,EAAcZ,IAAOC,IAAV,KAQXY,EAAgBb,IAAOC,IAAV,KAKba,EAAcd,IAAOC,IAAV,KACXc,EAAcf,IAAOC,IAAV,KASXe,EAAehB,IAAOC,IAAV,KAIZgB,EAAUjB,IAAOC,IAAV,KAcb,SAASiB,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SAE5B,OACI,eAACV,EAAD,WACI,eAACC,EAAD,WACI,eAACC,EAAD,eAAiBM,EAAjB,OACA,cAACL,EAAD,UAAcM,OAElB,cAACL,EAAD,UAAcM,OA0GXC,IC1MAA,ED2Gf,WAAyB,IAAD,EACQC,mBAAS,MADjB,mBACfC,EADe,KACNC,EADM,OAEwBF,mBAAS,MAFjC,mBAEfG,EAFe,KAEEC,EAFF,OAGIJ,qBAHJ,mBAGfK,EAHe,KAGRC,EAHQ,OAI0BN,qBAJ1B,mBAIfO,EAJe,KAIGC,EAJH,OAKkCR,oBAAS,GAL3C,mBAKfS,EALe,KAKOC,EALP,KAOhBC,EAAe,WAEnBC,MA5Gc,2EA6GTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJd,EAAWc,GACXZ,EAAmB,SAEpBa,OAAO,SAAAC,GACJd,EAAmBc,EAAIjB,SACvBkB,QAAQC,IAAI,WA+CtB,OAJAC,qBAAU,WACNV,MACD,IAGD,eAACnC,EAAD,WACGiC,GAAwB,cAACf,EAAD,8BACzB,cAACf,EAAD,iCACA,eAACE,EAAD,CAAayC,SAvCQ,SAAAC,GACnBA,EAAEC,iBACCf,IAGHC,GAAwB,GACxBE,MAAM,8CAA+C,CACrDa,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAU,OACVH,KAAMtB,MAGTQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFN,GAAwB,GACT,IAAZM,EAAKe,IAIRpB,IACAL,EAAS,KAJLE,EAAoBQ,EAAKf,YAK9BgB,OAAM,SAAAC,GACLR,GAAwB,GACxBF,EAAoBU,EAAIjB,cAY9B,UACI,cAAClB,EAAD,CAAiBsB,MAAOA,EAAO2B,QA5CX,SAAAT,GACxBf,EAAoB,OA2C6CyB,SAhDxC,SAAAV,GAC3BjB,EAASiB,EAAEW,OAAO7B,QA+CiF8B,KAAM,KACnG,cAAClD,EAAD,uCACCsB,GAAqB,cAACd,EAAD,UAAec,OAExCJ,GACG,eAACV,EAAD,oCAC2BU,EAAgBiC,cAG9CnC,GAA8B,IAAnBA,EAAQoC,QAAiB,8CACrC,cAAClD,EAAD,UACKc,GAAWA,EAAQqC,KAAI,SAACrC,GAAD,OACpB,cAACN,EAAD,CAEEC,OAAQK,EAAQ6B,SAChBjC,KAAM,IAAI0C,KAAKtC,EAAQuC,WAAWC,iBAHpC,SAIGxC,EAAQ0B,MAHJ1B,EAAQyC,aEzL7BC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.769e6074.chunk.js","sourcesContent":["import react, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst API_ENDPOINT = `https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc`\n\nconst Page = styled.div`\n  width: 400px;\n  margin: 0 auto;\n`\n\nconst Title = styled.h1`\n  color: #333;\n`\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`\n\nconst MessageTextArea = styled.textarea`\n    display: block;\n    width: 100%;\n`\n\nconst SubmitButton = styled.button`\n  margin-top:  8px;\n  display: block;\n`\n\nconst MessageList = styled.div`\n  margin-top:  16px;\n`\n\nconst MessageContainer = styled.div`\n    padding: 8px 16px;\n    border-radius: 7px;\n    border: 1px solid black;\n\n    & + & {\n        margin-top: 10px;\n    }\n`\n\nconst MessageHead = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-bottom: 4px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`\n\nconst MessageAuthor = styled.div`\n    color: rgba(0, 0, 0, 0.7);\n    font-size: 14px;\n`\n\nconst MessageTime = styled.div``\nconst MessageBody = styled.div`\n    text-align: center;\n    width: 100%;\n    font-size: 16px;\n    margin-top: 16px;\n    white-space: pre-line;\n    word-break: break-word;\n`\n\nconst ErrorMessage = styled.div`\n  meargin-top: 16px;\n  color: red;\n`\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nfunction Message({author, time, children}) {\n\n    return(\n        <MessageContainer>\n            <MessageHead>\n                <MessageAuthor> {author} </MessageAuthor>\n                <MessageTime>{time}</MessageTime>\n            </MessageHead>\n            <MessageBody>{children}</MessageBody>\n        </MessageContainer>\n    )\n}\n\nMessage.propTypes = {\n    author: PropTypes.string,\n    time: PropTypes.string,\n    children: PropTypes.node,\n}\n\nfunction MessageBoard() {\n  const [message, setMessage] = useState(null)\n  const [MessageApiError, setMessageApiError] = useState(null)\n  const [value, setValue] = useState();\n  const [postMessageError, setPostMessageError] = useState()\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n  \n  const fetchMessage = () => {\n\n    fetch(API_ENDPOINT)\n        .then(res => res.json())\n        .then(data => {\n          \n          setMessage(data)\n          setMessageApiError(null)\n        })\n        .catch( err => {\n            setMessageApiError(err.message)\n            console.log('err')\n        })\n    }\n\n  const handleTextareaChange = e => {\n    setValue(e.target.value)\n  }\n \n  const handleTextareaFocus = e => {\n      setPostMessageError(null)\n  }\n\n  const handleFormSubmit = e => {\n        e.preventDefault();\n        if(isLoadingPostMessage) {\n            return\n        }\n        setIsLoadingPostMessage(true)\n        fetch('https://student-json-api.lidemy.me/comments', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            nickname: 'rock',\n            body: value\n        })\n        })\n        .then(res => res.json())\n        .then(data => {\n            setIsLoadingPostMessage(false)\n            if(data.ok === 0) {\n                setPostMessageError(data.message)\n                return\n            }\n            fetchMessage()\n            setValue(\"\")\n        }).catch(err => {\n            setIsLoadingPostMessage(false)\n            setPostMessageError(err.message)\n        })\n  }\n\n  useEffect(() => {\n      fetchMessage()\n  }, [])\n\n  return(\n    <Page>\n      {isLoadingPostMessage && <Loading> Loading...... </Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n          <MessageTextArea value={value} onFocus={handleTextareaFocus} onChange={handleTextareaChange} rows={10}/>\n          <SubmitButton>送出留言</SubmitButton >\n          {postMessageError && (<ErrorMessage>{postMessageError}</ErrorMessage>)}\n      </MessageForm>\n      {MessageApiError && (\n          <ErrorMessage>\n              Something went wrong! {MessageApiError.toString()}\n          </ErrorMessage>\n      )}\n      {message && message.length === 0 && (<div> NoMessage </div>)}\n      <MessageList>\n          {message && message.map((message) => (\n              <Message \n                key={message.id} \n                author={message.nickname} \n                time={new Date(message.createdAt).toLocaleString()}>\n                {message.body}\n              </Message>\n          ))}\n      </MessageList>\n    </Page>\n  )\n}\n\n\nexport default MessageBoard;","import MessageBoard from './MessageBoard';\n\nexport default MessageBoard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './components/App/App';\nimport MessageBoard from './components/MessageBoard';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<MessageBoard />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}